<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		 version="3.0"
		 metadata-complete="true">
	<display-name>Spring+Lift+JPA example</display-name>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:spring/*-datasource.xml
			classpath*:spring/*-context.xml
			/WEB-INF/spring-security-context.xml
		</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>
			no.officenet.example.rpm.web.context.RpmRequestContextListener
		</listener-class>
	</listener>

	<!--
			   The HttpSessionEventPublisher will publish
			   HttpSessionCreatedEvent and HttpSessionDestroyedEvent
			   to the WebApplicationContext
		-->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Development</param-value>
	</context-param>
	<context-param>
		<description>State saving method: 'client' or 'server' (=default). See JSF Specification 2.5.2</description>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>server</param-value>
	</context-param>
	<context-param>
		<param-name>javax.faces.PARTIAL_STATE_SAVING</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<description>Might hide problems with login</description>
		<param-name>com.sun.faces.enableRestoreView11Compatibility</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<description>Default timezone</description>
		<param-name>javax.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE</param-name>
		<param-value>true</param-value>
	</context-param>
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.xhtml</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>jpaFilter</filter-name>
		<filter-class>
			org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter
		</filter-class>
		<init-param>
			<param-name>entityManagerFactoryBeanName</param-name>
			<param-value>RPM</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter>
		<filter-name>charsetFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter>
		<description>The Proxy that intercepts lift calls</description>
		<display-name>Lift proxy Filter</display-name>
		<filter-name>LiftProxyFilter</filter-name>
		<filter-class>no.officenet.example.rpm.web.filter.RegexpMappingFilter</filter-class>
		<init-param>
			<param-name>filterClass</param-name>
			<param-value>net.liftweb.http.LiftFilter</param-value>
		</init-param>
		<init-param>
			<!-- Match URIs not ending with .xhtml -->
			<param-name>matchPattern</param-name>
			<param-value>^(?!.*\.xhtml$).+$</param-value>
		</init-param>
	</filter>


	<!-- Order matters! -->
	<filter-mapping>
		<filter-name>charsetFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>jpaFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>LiftProxyFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>